package ens.smartcity.graphicaldsl;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;

public class MainWindow {
    private JPanel panel1;
    private JButton openCSVFileButton;
    private JButton openJSONFileButton;
    private JButton button1;
    private JButton sendDataButton;
    private JTable table1;
    private JButton addTailoringButton;
    private JList listData;
    private JButton sampleDataButton;

    public MainWindow() {
        listData.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent listSelectionEvent) {

            }
        });
    }

    public JPanel getPanel1() {
        return panel1;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Liberation Sans", -1, 28, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("SmartCity DSL");
        panel1.add(label1, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.CENTER);
        final JToolBar toolBar1 = new JToolBar();
        panel2.add(toolBar1, BorderLayout.NORTH);
        openCSVFileButton = new JButton();
        openCSVFileButton.setText("Open CSV File");
        toolBar1.add(openCSVFileButton);
        openJSONFileButton = new JButton();
        openJSONFileButton.setText("Open JSON File");
        toolBar1.add(openJSONFileButton);
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        toolBar1.add(spacer1);
        addTailoringButton = new JButton();
        addTailoringButton.setText("Add Tailoring");
        toolBar1.add(addTailoringButton);
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        toolBar1.add(spacer2);
        sampleDataButton = new JButton();
        sampleDataButton.setText("Sample Data");
        toolBar1.add(sampleDataButton);
        final JSeparator separator1 = new JSeparator();
        toolBar1.add(separator1);
        button1 = new JButton();
        button1.setText("Button");
        toolBar1.add(button1);
        final JToolBar toolBar2 = new JToolBar();
        panel2.add(toolBar2, BorderLayout.SOUTH);
        sendDataButton = new JButton();
        sendDataButton.setText("Send Data");
        toolBar2.add(sendDataButton);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel2.add(panel3, BorderLayout.WEST);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel3.add(scrollPane1, BorderLayout.EAST);
        listData = new JList();
        listData.setSelectionMode(0);
        scrollPane1.setViewportView(listData);
        final JLabel label2 = new JLabel();
        label2.setText("List of Data:");
        panel3.add(label2, BorderLayout.NORTH);
        table1 = new JTable();
        panel2.add(table1, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
